name: Feature Branch Checks
run-name: ${{ github.actor }} is running checks on feature branch
on:
  workflow_call:
    inputs:
      TYPE:
        type: string
        required: true
      AWS_ACCOUNT_ID:
        type: string
        required: false
        default: '338331614198'
      AWS_REGION:
        type: string
        required: false
        default: 'us-east-1'
      ENV_VARS:
        type: string
    secrets:
      ENV_SECRETS:
        required: false
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  feature-branch-checks:
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize
        if: ${{ inputs.TYPE == 'backend' }}
        uses: benjlevesque/short-sha@v2.1
        id: short-sha
        with:
          length: 5
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Setup
        id: setup
        run: |
          npm i -g zx
          zx ./scripts/setup.mjs
        env:
          ENV_SECRETS: ${{ secrets.ENV_SECRETS }}
          ENV_VARS: ${{ inputs.ENV_VARS }}
          ENV: DEV
          NAMESPACE: ${{ steps.short-sha.outputs.sha }}
      - name: Configure AWS Credentials for deployment
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{inputs.AWS_REGION}}
          role-to-assume: "arn:aws:iam::${{inputs.AWS_ACCOUNT_ID}}:role/system/xac-eng-role"
          role-session-name: GitHubActionSession
          role-chaining: true
      - name: Build
        run: zx ./scripts/build.mjs
        env:
          ENV_SECRETS: ${{ secrets.ENV_SECRETS }}
          ENV_VARS: ${{ inputs.ENV_VARS }}
          ENV: DEV
          NAMESPACE: ${{ steps.short-sha.outputs.sha }}
      - name: Deploy
        if: ${{ inputs.TYPE == 'backend' }}
        id: deploy
        run: zx ./scripts/deploy.mjs
        env:
          ENV_SECRETS: ${{ secrets.ENV_SECRETS }}
          ENV_VARS: ${{ inputs.ENV_VARS }}
          ENV: DEV
          NAMESPACE: ${{ steps.short-sha.outputs.sha }}
      - name: Destroy Deployment
        if: ${{ inputs.TYPE == 'backend' && steps.deploy.outcome == 'success' && always() }}
        run: zx ./scripts/destroy.mjs
        env:
          ENV_SECRETS: ${{ secrets.ENV_SECRETS }}
          ENV_VARS: ${{ inputs.ENV_VARS }}
          ENV: DEV
          NAMESPACE: ${{ steps.short-sha.outputs.sha }}